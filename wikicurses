#! /usr/bin/env python3


import json
import urllib.request
import re
import argparse

import urwid

from wikicurses.wiki import Wiki

base_url = "http://en.wikipedia.org/w/api.php?"

parser = argparse.ArgumentParser(description =
                                    "A simple curses interface for accessing Wikipedia.")

group = parser.add_mutually_exclusive_group(required = True)
group.add_argument('search',
                    nargs = '?',
                    default = '',
                    help = "Page to search for on Wikipedia")
group.add_argument('-d', '--today',
                    action = 'store_const',
                    const = 'onthisday',
                    help='Display URLs for the "On this day" pages')
group.add_argument('-f', '--featured',
                    action = 'store_const',
                    const = 'featured',
                    help = 'Display the featured articles URLs')
group.add_argument('-p', '--picture',
                    action = 'store_const',
                    const = 'potd',
                    help='Display URLs for the "Picture of the day" pages')

args = parser.parse_args()

wiki = Wiki(base_url)
widgets = []

if args.search :
    article = wiki.search(args.search)
    widgets.append(urwid.Text(('h1', article.title), align="center"))

    for title, content in article.get_content().items():
        if title:
            widgets.append(urwid.Text(('h2', title), align="center"))
        widgets.append(urwid.Text(content))

else:
    if args.featured:
        title = "Featured Articles"
    elif args.picture:
        title = "Picture of the Day"
    else:
        title = "On this Day"
    feed = args.featured or args.picture or args.today
    widgets.append(urwid.Text(('h1', title), align="center"))
    widgets.append(urwid.Text(wiki.get_featured_feed(feed)))


pager = urwid.ListBox(widgets)
pager._command_map['k'] = 'cursor up'
pager._command_map['j'] = 'cursor down'
pager._command_map['ctrl b'] = 'cursor page up'
pager._command_map['ctrl f'] = 'cursor page down'

def keymapper(input):
    #TODO: Implement gg and G
    if input == 'q':
        raise  urwid.ExitMainLoop
    else:
        return False
    return True


screen = urwid.raw_display.Screen() 
screen.register_palette_entry('h1', 'yellow,bold', '')
screen.register_palette_entry('h2', 'underline', '')
#screen.register_palette_entry('italic', 'italics', '') #No italics option?
screen.register_palette_entry('bold', 'bold', '')
screen.register_palette_entry('bolditalic', 'bold', '')

loop = urwid.MainLoop(pager, screen=screen, handle_mouse=False,
                     unhandled_input=keymapper)
loop.run()
